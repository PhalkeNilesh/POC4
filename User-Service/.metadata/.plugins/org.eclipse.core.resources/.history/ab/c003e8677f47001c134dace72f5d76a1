package com.user.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.user.model.Book;
import com.user.model.Contact;
import com.user.model.User;
import com.user.repository.UserRepository;
import com.user.service.UserService;



@RestController
@RequestMapping("/user")
public class UserContoller {
	
	@Autowired
	private UserService userService;
	
	@Autowired
	private UserRepository userRepo;
	
	@Autowired
	private RestTemplate restTemplate;
	
	
	@GetMapping("/hello")
	public String hello() {
		return "Welcome To Spring";
	}
	
	
	@PostMapping("/add")
	public User addUser(@RequestBody User user) {
		return userRepo.save(user);
	}
	
	@GetMapping("/getUsers")
	public List<User> getAllUser(){
		return userRepo.findAll();
	}
	
	@GetMapping("/getUsers")
	public List<Contact> getUserContact(@PathVariable("userId") Long userId){
		User user = this.userService.getUser(userId);
		List<Contact> contact = this.restTemplate.getForObject("http://contact-service/contact/user/"+user.getUserId(), List.class);
		
		return contact;
	}
	
	
	@GetMapping("/{userId}")
	public User getUserById(@PathVariable("userId") Long userId){
		User user = this.userService.getUser(userId);
		//List<Contact> contact = this.restTemplate.getForObject("http://contact-service/contact/user/\"+user.getUserId(), List.class");
		List<Contact> contact = this.restTemplate.getForObject("http://contact-service/contact/user/"+user.getUserId(), List.class);
		List<Book> book = this.restTemplate.getForObject("http://book-service/book/user/"+user.getUserId(), List.class);
		System.out.println(contact);
		System.out.println(book);
		user.setBook(book);
		user.setContact(contact);
		return user;
	}
	
	@DeleteMapping("/delete/{id}")
	public String deleteUser(@PathVariable Long id) {
		userRepo.deleteById(id);
		return "Book deleted by Id";
	}
	

	

}
